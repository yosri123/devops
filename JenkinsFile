pipeline {
    agent any
    stages {
        stage('test') {
            steps {
                echo 'hello'
            }
        }
         stage('Build') {
      steps{
          
          
        dir('C:/Users/21655/Desktop/lastVersion') {
                bat 'mvn clean install'
      }}
    }
   /* 
    stage ("Lancement des Tests Unitaires"){
		 	steps{
			dir('C:/Users/21655/Desktop/lastVersion') {
				bat 'mvn test'
			}}
		 }
		 */
        
          stage("Sonar") {
            steps {
                dir('C:/Users/21655/Desktop/lastVersion') {
                bat 'mvn sonar:sonar'
            }}}
            
        stage("nexus") {
            steps {
                dir('C:/Users/21655/Desktop/lastVersion') {
                bat 'mvn clean package deploy:deploy-file -DgroupId=tn.esprit.spring -DartifactId=Timesheet-spring-boot-core-data-jpa-mvc-REST-1 -Dversion=2.1 -DgeneratePom=true -Dpackaging=war -DrepositoryId=deploymentRepo -Durl=http://localhost:8081/repository/maven-releases/ -Dfile=target/Timesheet-spring-boot-core-data-jpa-mvc-REST-1-0.0.1-SNAPSHOT.war -Dmaven.test.skip=true'
            }
        }}
        
        stage("Building docker image") {
            steps {
                dir('C:/Users/21655/Desktop/lastVersion') {
                bat 'docker build -t springdocker . '
            }
               
            }
        }
	
	 stage('Upload Image') {
     steps{    
      
            bat 'docker tag springdocker yosri74/firstrepo:springdocker'
            bat  'docker push yosri74/firstrepo:springdocker '
        }
      }
        
      /*  stage("Running docker image") {
            steps {
                 dir('C:/Users/21655/Desktop/lastVersion') {
                bat 'docker run -p 9090:8087 springdocker  '
            }
                
            }
        } */
    
        stage("Email") {
            steps {
              emailext attachLog: true, body: '', subject: 'Jenkins Pipeline Report', to: 'yosri.bhiri@esprit.tn'
            }
        }
    }
}
